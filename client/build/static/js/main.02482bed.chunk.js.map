{"version":3,"sources":["components/Review.js","App.js","index.js"],"names":["Review","props","message","score","incorrect","questions","forEach","q","answers","id","push","length","toFixed","state","incorrect_questions","score_message","className","this","map","includes","question","guesses","onClick","window","location","reload","React","Component","App","answerAlert","submitting","questionChange","bind","submitGuess","axios","get","then","res","setState","data","event","target","getAttribute","a","value","newGuess","preventDefault","Object","keys","post","answerReceived","catch","err","console","log","class","role","onSubmit","question_number","question_text","choices","onChange","c","c_idx","name","type","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02482bed.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../scss/bootstrap.scss\";\r\nimport \"../scss/main.scss\";\r\n\r\nclass Review extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n        let score = 0;\r\n        let incorrect = [];\r\n        this.props.questions.forEach(q => {\r\n            if (this.props.answers[q.id][0]) {\r\n                score++;\r\n                incorrect.push(q.id);\r\n            }\r\n        })\r\n        score = (score / this.props.questions.length * 100).toFixed()\r\n        let message;\r\n        if (score >= 90) {\r\n            message = `Congratulations! You got ${score}% correct!`;\r\n        } else if (score >= 75) {\r\n            message = `You got ${score}% correct, that's okay, I guess?`;\r\n        } else if (score >= 50) {\r\n            message = `You only got ${score}% correct? Why don't you try harder next time.`;\r\n        } else {\r\n            message = `You should be really proud! You got ${score}%!`;\r\n        }\r\n\r\n        this.state = {\r\n            incorrect_questions: incorrect,\r\n            score_message: message\r\n        };\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"full\">\r\n\t\t\t\t<div className=\"container py-5\">\r\n                    <div className=\"row pb-5\">\r\n                        <h1 className=\"text-center\">{this.state.score_message}</h1>\r\n                    </div>\r\n                    {\r\n                        this.props.questions.map(q => {\r\n                            if (!this.state.incorrect_questions.includes(q.id)) {\r\n                                return (\r\n                                    <div className=\"pt-3\">\r\n                                        <h5>{q.question}</h5>\r\n                                        <p className=\"text-danger\">You incorrectly answered {this.props.guesses[q.id]}.</p>\r\n                                        <p className=\"text-success\">The correct answer was {this.props.answers[q.id][1]}.</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <div className=\"pt-3\">\r\n                                    <h5>{q.question}</h5>\r\n                                    <p className=\"text-success\">You correctly answered {this.props.guesses[q.id]}.</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div className=\"center\">\r\n                        <button className=\"btn btn-outline-primary btn-lg text-center\" onClick={() => window.location.reload()}>Try Again?</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Review;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Review from './components/Review';\nimport \"./scss/bootstrap.scss\";\nimport \"./scss/main.scss\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tquestions: [],\n\t\t\tguesses: {},\n\t\t\tanswerAlert: false,\n\t\t\tsubmitting: false\n\t\t};\n\n\t\tthis.questionChange = this.questionChange.bind(this);\n\t\tthis.submitGuess = this.submitGuess.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(\"/api/questions/\").then(res => {\n\t\t\t// questions will be in the form of {question: str, choices: list, id: int}\n\t\t\tthis.setState({questions: res.data});\t\n\t\t})\n\t}\n\n\t// Called whenever a radio button is pressed\n\tquestionChange(event) {\n\t\tconst q = event.target.getAttribute(\"name\");\n\t\tconst a = event.target.value;\n\n\t\tlet newGuess = {...this.state.guesses};\n\t\tnewGuess[q] = a;\n\t\t\n\t\t// Guess in the form of {question_id (int): guess (str)}\n\t\tthis.setState({answerAlert: false, guesses: newGuess});\n\t}\n\n\tsubmitGuess(event) {\n\t\tevent.preventDefault();\n\t\t\n\t\tif (Object.keys(this.state.guesses).length !== this.state.questions.length) {\n\t\t\tthis.setState({answerAlert: true});\n\t\t} else {\n\t\t\tthis.setState({submitting: true});\n\t\t\taxios.post(\"/api/check/\", {guesses: this.state.guesses}).then(res => {\n\t\t\t\t// Received answers in the form of {question_id (int): [correct? (bool), actual_answer]}\n\t\t\t\tthis.setState({answerReceived: res.data, submitting: false});\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(\"Something went wrong.\")\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.answerReceived) {\n\t\t\treturn (\n\t\t\t\t<Review answers={this.state.answerReceived} guesses={this.state.guesses} questions={this.state.questions}/>\n\t\t\t)\n\t\t} else if (this.state.submitting) {\n\t\t\treturn (\n\t\t\t\t<div className=\"full\">\n\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t<span class=\"visually-hidden\">Loading...</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"full\">\n\t\t\t\t<div className=\"container py-5\">\n\t\t\t\t\t<div className=\"row justify-content-md-center\">\n\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t(this.state.answerAlert) ?\n\t\t\t\t\t\t\t\t<div className=\"mb-5 alert alert-danger\" role=\"alert\">\n\t\t\t\t\t\t\t\t\tYou have not answered all the questions!\n\t\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form onSubmit={this.submitGuess}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.questions.map((q, question_number) => {\n\t\t\t\t\t\t\t\tlet question_text = q.question;\n\t\t\t\t\t\t\t\tlet choices = q.choices;\n\t\t\t\t\t\t\t\tlet id = q.id;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"pb-5\" onChange={this.questionChange}>\n\t\t\t\t\t\t\t\t\t\t<h5>{question_number + 1}) {question_text}</h5>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tchoices.map((c, c_idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3 form-check\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" name={id} id={question_number + \"-\" + c_idx} type=\"radio\" value={c}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor={question_number + \"-\" + c_idx}>{c}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary btn-large text-center\">Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}