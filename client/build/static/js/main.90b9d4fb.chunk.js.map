{"version":3,"sources":["components/Review.js","App.js","index.js"],"names":["Review","props","running_score","incorrect","console","log","answers","questions","forEach","q","i","push","state","score","length","toFixed","incorrect_questions","className","this","map","includes","question","guesses","onClick","window","location","reload","React","Component","App","answerAlert","submitting","questionChange","bind","submitAnswers","event","target","getAttribute","a","value","newAnswer","setState","preventDefault","Object","keys","axios","post","then","res","data","answerReceived","get","class","role","onSubmit","question_text","choices","onChange","c","c_idx","name","id","type","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90b9d4fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../scss/bootstrap.scss\";\r\nimport \"../scss/main.scss\";\r\n\r\n\r\n\r\nclass Review extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n        let running_score = 0\r\n        let incorrect = []\r\n        console.log(this.props.answers)\r\n        this.props.questions.forEach((q, i) => {\r\n            if (this.props.answers[i][0]) {\r\n                running_score++;\r\n                incorrect.push(i)\r\n            }\r\n        })\r\n\r\n        this.state = {\r\n            score: (running_score / this.props.questions.length * 100).toFixed(),\r\n            incorrect_questions: incorrect\r\n        }\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"full\">\r\n\t\t\t\t<div className=\"container py-5\">\r\n                    <div className=\"row\">\r\n                        <h1 className=\"text-center\">You got {this.state.score}% correct!</h1>\r\n                    </div>\r\n                    {\r\n                        this.props.questions.map((q, i) => {\r\n                            console.log(q)\r\n                            if (!this.state.incorrect_questions.includes(i)) {\r\n                                return (\r\n                                    <div className=\"pt-3\">\r\n                                        <h5>{q.question}</h5>\r\n                                        <p className=\"text-danger\">You incorrectly answered {this.props.guesses[i]}</p>\r\n                                        <p className=\"text-success\">The correct answer was {this.props.answers[i][1]}</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <div className=\"pt-3\">\r\n                                    <h5>{q.question}</h5>\r\n                                    <p className=\"text-success\">You answered {this.props.guesses[i]}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div className=\"center\">\r\n                        <button className=\"btn btn-outline-primary text-center\" onClick={() => window.location.reload()}>Try Again</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Review;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Review from './components/Review';\nimport \"./scss/bootstrap.scss\";\nimport \"./scss/main.scss\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tquestions: [],\n\t\t\tanswers: {},\n\t\t\tanswerAlert: false,\n\t\t\tsubmitting: false\n\t\t}\n\n\t\tthis.questionChange = this.questionChange.bind(this);\n\t\tthis.submitAnswers = this.submitAnswers.bind(this);\n\t}\n\n\tquestionChange(event) {\n\t\tlet q = event.target.getAttribute(\"name\");\n\t\tlet a = event.target.value;\n\t\tlet newAnswer = {...this.state.answers};\n\t\tnewAnswer[q] = a;\n\t\t\n\t\tthis.setState({answerAlert: false, answers: newAnswer});\n\t}\n\n\tsubmitAnswers(event) {\n\t\tevent.preventDefault();\n\t\t\n\t\tif (Object.keys(this.state.answers).length !== this.state.questions.length) {\n\t\t\tthis.setState({answerAlert: true});\n\t\t} else {\n\t\t\tthis.setState({submitting: true})\n\t\t\taxios.post(\"/api/check/\", {guesses: this.state.answers}).then(res => {\n\t\t\t\tconsole.log(res.data)\n\t\t\t\tthis.setState({answerReceived: res.data})\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(\"/api/questions/\").then(res => {\n\t\t\tthis.setState({questions: res.data})\n\t\t})\n\t}\n\n\trender() {\n\t\tif (this.state.answerReceived) {\n\t\t\treturn (\n\t\t\t\t<Review answers={this.state.answerReceived} guesses={this.state.answers} questions={this.state.questions}/>\n\t\t\t)\n\t\t} else if (this.state.submitting) {\n\t\t\treturn (\n\t\t\t\t<div className=\"full\">\n\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t<span class=\"visually-hidden\">Loading...</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"full\">\n\t\t\t\t<div className=\"container py-5\">\n\t\t\t\t\t<div className=\"row justify-content-md-center\">\n\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t(this.state.answerAlert) ?\n\t\t\t\t\t\t\t\t<div className=\"mb-5 alert alert-danger\" role=\"alert\">\n\t\t\t\t\t\t\t\t\tYou have not answered all the questions!\n\t\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<form onSubmit={this.submitAnswers}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.questions.map((q, i) => {\n\t\t\t\t\t\t\t\tlet question_text = q.question;\n\t\t\t\t\t\t\t\tlet choices = q.choices;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"pb-5\" onChange={this.questionChange}>\n\t\t\t\t\t\t\t\t\t\t<h5>{i + 1}) {question_text}</h5>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tchoices.map((c, c_idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3 form-check\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" name={i} id={i + \"-\" + c_idx} type=\"radio\" value={c}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor={i + \"-\" + c_idx}>{c}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary text-center\">Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}